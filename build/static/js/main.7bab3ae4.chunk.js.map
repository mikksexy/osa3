{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","getAll","a","request","axios","get","response","data","create","newObject","post","remove","id","url","delete","update","newName","newNumber","put","name","number","exportedObject","Persons","props","persons","map","person","removePerson","Person","onClick","PersonForm","onSubmit","handleSubmit","value","onChange","handleNameChange","handleNumberChange","type","Filter","newFilter","handleFilterChange","Notification","message","includes","className","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","errorMessage","setErrorMessage","useEffect","personService","then","personsToShow","filter","toLowerCase","e","target","preventDefault","personObject","some","concat","setTimeout","catch","error","console","log","existingId","find","window","confirm","p","pe","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7bab3ae4.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = async () => {\r\n  const request = axios.get(baseUrl)\r\n    const response = await request\r\n  return response.data\r\n  }\r\n  \r\nconst create = async newObject => {\r\n  const request = axios.post(baseUrl, newObject)  \r\n  const response = await request\r\n  return response.data\r\n  }\r\n\r\nconst remove = async (id) => {\r\n  const url = `${baseUrl}/${id}`\r\n  const request = axios.delete(url)\r\n  const response = await request\r\n  return response.data\r\n}\r\n\r\nconst update = async (id, newName, newNumber) => {\r\n  const url = `${baseUrl}/${id}`\r\n  const request = axios.put(url, {\r\n    name: newName,\r\n    number: newNumber\r\n  })\r\n  const response = await request\r\n  return response.data\r\n}\r\n\r\nconst exportedObject = {\r\n    getAll,\r\n    create,\r\n    remove,\r\n    update\r\n}\r\n\r\nexport default exportedObject","import React, { useState, useEffect} from 'react'\nimport personService from './services/persons'\nimport './index.css'\n\nconst Persons = (props) => {\n  return (\n    <div>\n      {props.persons.map(person =>\n        <Person key={person.name} person={person} removePerson={props.removePerson} />\n      )}\n    </div>\n  )\n}\n\nconst Person = (props) => {\n  return (\n    <div>\n    {props.person.name} {props.person.number} \n    <button onClick={() => props.removePerson(props.person)}>delete</button>\n    </div>\n  )\n}\n\nconst PersonForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n        <div>\n          name: <input\n            value={props.newName}\n            onChange={props.handleNameChange}\n          />\n        </div>\n        <div>\n          number: <input\n            value={props.newNumber}\n            onChange={props.handleNumberChange}\n          />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n  )\n}\n\nconst Filter = (props) => {\n  return (\n    <div>\n    filter shown with<input\n        value={props.newFilter}\n        onChange={props.handleFilterChange}\n        />\n    </div>\n  )\n}\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  if (message.includes( 'failed' || 'Information')) {\n    return (\n      <div className=\"error\">\n        {message}\n      </div>\n    )\n  }\n  return (\n    <div className=\"success\">\n      {message}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ errorMessage, setErrorMessage ] = useState(null)\n  \n\n  useEffect(() => {\n    personService\n    .getAll()\n    .then(response => {\n      setPersons(response)\n    })\n  }, [])\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n    if (newName === '') return\n    if (persons.some(e => e.name === newName) === true) {\n      const existingId = persons.find(name => name.name === newName).id\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`) === false) return\n      personService\n      .update(existingId, newName, newNumber)\n      .then(response => {\n        setPersons(persons.map(person => person.id !== existingId ? person : response))\n        setErrorMessage(`Updated ${newName}`)\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n      })\n      .catch(error => {\n        setErrorMessage(`Information of ${newName} has already been removed from the server`)\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n      setPersons(persons.filter(p => p.id !== existingId))\n    })\n      return\n    }\n    personService\n      .create(personObject)\n      .then(response => {\n        setPersons(persons.concat(personObject))\n        setNewName('')\n        setNewNumber('')\n        setErrorMessage(`Added ${personObject.name}`)\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n      })\n      .catch(error => {\n        console.log(error.response.data)\n        setErrorMessage(error.response.data.error)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n  }\n\n  const removePerson = (person) => {\n      if (window.confirm(`Delete ${person.name} ?`) === false) return\n      personService\n      .remove(person.id)\n      .then(response => {\n        setPersons(persons.filter(pe => pe.id !== person.id))\n        setErrorMessage(`Removed ${person.name}`)\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n      })\n      \n  }\n\n  const handleNameChange = (e) => {\n    setNewName(e.target.value)\n  }\n\n  const handleNumberChange = (e) => {\n    setNewNumber(e.target.value)\n  }\n\n  const handleFilterChange = (e) => {\n    setNewFilter(e.target.value)\n  }\n\n  const personsToShow = persons\n  ? persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()) === true)\n  : persons\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errorMessage} />\n      <Filter newFilter={newFilter}\n        handleFilterChange={handleFilterChange}\n      />\n      <h3>add a new</h3>\n      <PersonForm handleSubmit={handleSubmit}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        newName={newName}\n        newNumber={newNumber}\n      />\n      <h3>Numbers</h3>\n      <Persons persons={personsToShow}\n      removePerson={removePerson} \n      />\n    </div>\n  )\n\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}